version: '3'

services:

  app:
    container_name: app
    image: app
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    working_dir: /var/www
    volumes:
      - .:/var/www
    restart: unless-stopped
    environment:
      APP_NAME: ${APP_NAME}
      APP_ENV: ${APP_ENV}
      APP_KEY: ${APP_KEY}
      APP_DEBUG: ${APP_DEBUG}
      APP_URL: ${APP_URL}

      LOG_CHANNEL: ${LOG_CHANNEL}

      DB_CONNECTION: ${DB_CONNECTION}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}

      BROADCAST_DRIVER: ${BROADCAST_DRIVER}
      CACHE_DRIVER: ${CACHE_DRIVER}
      QUEUE_CONNECTION: ${QUEUE_CONNECTION}
      SESSION_DRIVER: ${SESSION_DRIVER}
      SESSION_LIFETIME: ${SESSION_LIFETIME}
      SESSION_SECURE_COOKIE: ${SESSION_SECURE_COOKIE}

      REDIS_HOST: ${REDIS_HOST}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: ${REDIS_PORT}

      MAIL_DRIVER: ${MAIL_DRIVER}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_ENCRYPTION: ${MAIL_ENCRYPTION}
      MAIL_FROM_ADDRESS: ${MAIL_FROM_ADDRESS}
      MAIL_FROM_NAME: ${MAIL_FROM_NAME}

      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      AWS_BUCKET: ${AWS_BUCKET}

      PUSHER_APP_ID: ${PUSHER_APP_ID}
      PUSHER_APP_KEY: ${PUSHER_APP_KEY}
      PUSHER_APP_SECRET: ${PUSHER_APP_SECRET}
      PUSHER_APP_CLUSTER: ${PUSHER_APP_CLUSTER}

      MIX_PUSHER_APP_KEY: ${MIX_PUSHER_APP_KEY}
      MIX_PUSHER_APP_CLUSTER: ${MIX_PUSHER_APP_CLUSTER}

      TAP_API: ${TAP_API}

      AAF_SECRET: ${AAF_SECRET}
      AAF_AUD: ${AAF_AUD}
      AAF_LINK: ${AAF_LINK}

      LTI_KEY: ${LTI_KEY}
      LTI_SECRET: ${LTI_SECRET}

    depends_on:
      - redis
    networks:
      - app-network
      - tap-network

  nginx:
    container_name: nginx
    image: nginx
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
      args:
        network_mode: bridge
    volumes:
      - ./public/css:/var/www/css
      - ./public/js:/var/www/js
    restart: unless-stopped
    ports:
      - "80:80"
    networks:
      - app-network
      - socket-network

  redis:
    container_name: redis
    image: redis
    volumes:
        - ${DATA_PATH_HOST}/redis:/data
    networks:
      - app-network
      - socket-network

  socketio:
    container_name: socketio
    image: socketio
    build:
      context: .
      dockerfile: ./docker/socketio/Dockerfile
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: ${REDIS_PORT}
    depends_on:
      - redis
    networks:
      - socket-network

  tap:
    container_name: tap
    image: utscichub/tap:3.2.2
    environment:
      ATHANOR_URL: ${ATHANOR_URL}
      TAP_HOSTS: ${TAP_HOSTS}
      TAP_SECRET: ${TAP_SECRET}
      JAVA_OPTS: '-Xmx1024m -Xms1024m -XX:MaxPermSize=2048m'
    deploy:
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 100M
    ports:
      - '9000:9000'
    networks:
      - tap-network

  athanor:
    container_name: athanor
    image: utscichub/athanor:0.9.4.1
    environment:
      GRAMMAR_PATH: /opt/docker/grammar
    ports:
      - '8083:8083'
    networks:
      - tap-network

networks:
  app-network:
    driver: bridge
  socket-network:
    driver: bridge
  tap-network:
    driver: bridge

volumes:
  app:
    driver: local
  redis:
    driver: local
